<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" href="https://steamforyou.site/images/logo.png">
  <meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests">
  <title>Steam For U</title>

  <!-- 부트스트랩 -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous" />
  <!-- ajax 및 jquery -->
  <script src="http://code.jquery.com/jquery-3.2.1.js"></script>
  <!-- jquery-ui -->
  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
  <!-- jquery-ui css -->
  <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.js"></script>
  <!-- 구글폰트 -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Black+Han+Sans&family=Jua&display=swap" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Gowun+Dodum&family=Noto+Sans+KR:wght@100;300&display=swap"
    rel="stylesheet"> <%- include('./style'); %>

    <script type="text/javascript">
      // 페이지 로딩하자마자 실행할 함수
      const spinner = `
        <div class="spinner-border text-light" style="display : block; margin : 50px auto;" role="status">
          <span class="visually-hidden">Loading...</span>
        </div>
      
      `
      $(document).ready(function () {
        // 로그인
        isLogin();

        // 추천배너
        showRecommendedGames();

        // search -> index 돌아올때 localStorge 읽기
        if (localStorage.getItem('data')) {
          render_games()
        }

        autocompletaion()
      })

      const enterkey = () => {
        if (window.event.keyCode == 13) {
          check();
        }
      }

      const sign_out = () => {
        $.removeCookie("Bearer", { path: "/" });
        alert("로그아웃");
        window.location.href = "/";
      }

      // login or logout button
      const isLogin = () => {
        const cookie = $.cookie("Bearer");
        let temp_html;
        if (cookie) {
          temp_html = `<input type="submit" value="로그아웃" onclick="sign_out()" class="login_button back_color">`;
        } else {
          temp_html = `<input type="submit" value="로그인" onclick="location.href='/user/login'" class="login_button back_color">`;
        }
        $("#isLogin").append(temp_html);
      }

      const autocompletaion = () => {
        $('#inputBox').autocomplete({
          source: function (request, response) {
            $.ajax({
              type: 'post',
              url: `/search/autocomplete`,
              dataType: 'json',
              data: { value: request.term },
              success: function (data) {
                console.log(data)
                // 서버에서 json 데이터 response 후 목록 추가
                response(
                  $.map(data, function (item) {
                    return {
                      label: item._source.name,
                      appid: item._source.appid,
                      img_url: item._source.img_url,
                    }
                  })
                );
              }
            });
          },
          minLength: 3,
          delay: 350,
          select: function (event, ui) {
            // 리뷰검색 이벤트
            // movePage(ui.item.appid, ui.item.label)
            // 키워드 검색 이벤트
            $('#inputBox').val(`${ui.item.label}`);
            show_games()
          }
        }).autocomplete("instance")._renderItem = function (ul, item) {
          return $("<li class='match_li'>").append(
            `<a class="match">
          <div class="match_name">
              ${item.label}
          </div>
          <div class="match_img">
            <img src="${item.img_url}" style="width: 120px; height: 52px;">
          </div>
          <div></div>
        </a>`).appendTo(ul);
        };
      }

      // check input
      const check = () => {
        var search = document.querySelector("#inputBox").value;
        if (search.length < 2) {
          alert("두글자 이상 입력해주세요");
          event.preventDefault();
        } else {
          show_games();
        }
      }

      // search -> index
      const movePage = (appid, name) => {
        // 홀따옴표를 다시 바꿔줌
        name = name.replace("#quote#", "'")
        location.href = `/search/render/appid?appid=${appid}&name=${name}`;
      }

      // search -> index
      const render_games = () => {
        const Data = JSON.parse(localStorage.getItem('data'))
        if (Data) $('#inputBox').val(`${Data.keyword}`);
        console.log(Data)
        $.ajax({
          type: "POST",
          url: `/search`,
          data: {
            'keyword': `${Data.keyword}`,
            'slice_start': `0`
          },
          success: function (response) {
            $("#carouselExampleFade").empty();
            $("#bundle").empty();
            response = response.data
            if (!response.length) {
              let temp_html = `
            <div class="name">
              <h3  style="color: #eeecea;">~검색결과 없음~</h3>
            </div>
            `
              $("#game-list").append(temp_html);
              return;
            }
            appendingIndex(response)
            localStorage.removeItem("data");
          },
        });
      }
      // search
      const show_games = (count) => {
        // console.time('for');
        if (!count) $("#game-list").empty();
        $("#bundle").empty();
        $("#bundle").append(spinner)
        if (!count) count = 0
        let keyword = $("#inputBox").val();
        $.ajax({
          type: "POST",
          url: `/search`,
          data: {
            'keyword': `${keyword}`,
            'slice_start': `${count}`
          },
          success: function (response) {
            $("#carouselExampleFade").empty();
            $("#bundle").empty();
            response = response.data
            if (!response.length) {
              let temp_html = `
            <div class="name">
              <h3  style="color: #eeecea;">~검색결과 없음~</h3>
            </div>
            `
              $("#game-list").append(temp_html);
              return;
            }
            appendingIndex(response)
            if (response.length >= 30) {
              let count = document.querySelectorAll('#game').length
              $("#bundle").append(
                `<div class="d-grid gap-2">
                <button class="btn btn-dark" type="button" onclick="show_games(${count})" style="margin-bottom: 20px">30개 더보기</button>
              </div>`)
            }
          },
        });
      }

      const appendingIndex = (response) => {
        for (let i = 0; i < response.length; i++) {
          console.log(response[i]["_source"])
          let name = response[i]["_source"]["name"].replace("'", "#quote#") // 홀따옴표 문제
          let temp_html = `
                    <div class="card mb-3 game_card" style="max-width: 1010px; " id="game">
                      <div class="row g-0">
                        <div class="col-md-4" 
                        onclick="movePage('${response[i]._source.appid}', '${name}')" 
                        style="cursor:pointer;display:flex;justify-content: center;align-items: center">
                          <img style="height: 156px" src="${response[i]["_source"]['img_url'] || "https://steamforyou.site/images/ready.jpg"}" class="img-fluid rounded-start" alt="..." >
                        </div>
                        <div class="col-md-8">
                          <div class="card-body">
                            <h5 class="card-title">${response[i]["_source"]["name"]}</h5>
                            <p class="card-text">
                              STEAM 평가: ${response[i]["_source"]["review_score_desc"]} / 
                              Metacritic: ${response[i]["_source"]["metacritic"] ? response[i]["_source"]["metacritic"]["score"] + "점" : "없음"}
                            </p>
                            <p class="card-text"><small class="text-muted">
                              ${response[i]["_source"]["short_description"] ? response[i]["_source"]["short_description"] : ""}
                              <br><br>
                              ${response[i]["_source"]["platforms"] ? '<b>플랫폼</b>: ' + findPlatform(response[i]["_source"]["platforms"]) + '<br>' : ""}
                              
                              ${response[i]["_source"]["release_date"] ? '<b>출시일</b>: ' + response[i]["_source"]["release_date"]["date"] + '<br>' : ""}
                              
                              ${response[i]["_source"]["genres"] ? '<b>장르</b>: ' + findGenresOrCategories(response[i]["_source"]["genres"]) + '<br>' : ""}
                              
                              ${response[i]["_source"]["categories"] ? '<b>카테고리</b>: ' + findGenresOrCategories(response[i]["_source"]["categories"]) + '<br>' : ""}
                              
                              ${response[i]["_source"]["supported_languages"] ? '<b>언어</b>: ' + response[i]["_source"]["supported_languages"] : ""}
                              </small></p>
                          </div>
                        </div>
                      </div>
                    </div>`
          $("#game-list").append(temp_html)
        }
      }

      const findGenresOrCategories = (element) => {
        let arr = [];
        for (let i = 0; i < element.length; i++) {
          arr.push(element[i].description)
        }
        return arr.join(", ")
      }

      const findPlatform = (platforms) => {
        let arr = [];
        for (const platform in platforms) {
          const check = platforms[platform] ? platform : ""
          arr.push(check)
        }
        return arr.join(" ")
      }

      // 추천게임 배너
      const showRecommendedGames = () => {
        $.ajax({
          type: "GET",
          url: `/analyze/best`,
          data: {},
          success: function (response) {
            if (!response) return;
            const randomArray = response.best_list.sort(() => 0.5 - Math.random())
            const array = []
            for (let i = 0; i < 3; i++) {
              array.push(randomArray[i])
            }
            let temp_html =
              ` <div class="carousel-inner">
                <div class="carousel-item active">
                  <h2 class="carousel_h2">추천게임</h3>
                  <img onclick='movePage("${array[0].appid}", "${array[0].name.replace("'", "#quote#")}")' src="${array[0].img_url}" class="d-block w-100 imageblock" alt="..." >
                  <div class="carousel_explain">
                    <h3 onclick='movePage("${array[0].appid}", "${array[0].name.replace("'", "#quote#")}")' style="cursor:pointer;">${array[0].name}</h3>
                    <p>
                      장르: ${array[0].genre} /
                      리뷰 총점: ${array[0].review_score} /
                      평가: ${array[0].review_score_desc}
                    </p>
                  </div>
                    </div>
                <div class="carousel-item">
                  <h2 class="carousel_h2">추천게임</h3>
                  <img onclick='movePage("${array[1].appid}", "${array[1].name.replace("'", "#quote#")}")' src="${array[1].img_url}" class="d-block w-100 imageblock" alt="..." >
                  <div class="carousel_explain">
                    <h3 onclick='movePage("${array[1].appid}", "${array[1].name.replace("'", "#quote#")}")' style="cursor:pointer;">${array[1].name}</h3>
                    <p>
                      장르: ${array[1].genre} /
                      리뷰 총점: ${array[1].review_score} /
                      평가: ${array[1].review_score_desc}
                    </p>
                  </div>
                    </div>
                <div class="carousel-item">
                  <h2 class="carousel_h2">추천게임</h3>
                  <img onclick='movePage("${array[2].appid}", "${array[2].name.replace("'", "#quote#")}")' src="${array[2].img_url}" class="d-block w-100 imageblock" alt="..." >
                  <div class="carousel_explain">
                    <h3 onclick='movePage("${array[2].appid}", "${array[2].name.replace("'", "#quote#")}")' style="cursor:pointer;">${array[2].name}</h3>
                    <p>
                      장르: ${array[2].genre} /
                      리뷰 총점: ${array[2].review_score} /
                      평가: ${array[2].review_score_desc}
                    </p>
                  </div>
                    </div>
              </div>
              <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleFade" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
              </button>
              <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleFade" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
              </button>`;

            $("#carouselExampleFade").append(temp_html);
          },
        });
      }

      const recommendUpdateCheck = () => {
        const cookie = $.cookie("Bearer");
        if (!cookie) {
          alert("로그인 후 이용 가능합니다.")
          location.href = "/user/login"
          return;
        }
        $("#bundle").append(spinner)
        $.ajax({
          type: "get",
          url: `/analyze`,
          data: {},
          success: function (response) {
            $("#game-list").empty();
            $("#bundle").empty();
            if (response.result.status === 200) {
              if (response.result.message === "success") {
                alert("추천 게임이 갱신되었습니다.");
              }
              $("#carouselExampleFade").empty();
              showUserRecommendedGames()
            } else {
              alert("충분한 데이터가 쌓이지 않아 사용할 수 없습니다.");
            }
          }
        })
      }

      const showUserRecommendedGames = () => {
        $.ajax({
          type: "get",
          url: `/analyze/like`,
          data: {},
          success: function (response) {
            appendingIndex(response.game_list)
          }
        })
      }

    </script>
</head>

<body>
  <section class="banner" style="display: flex;flex-direction: column;justify-content: center; align-items: center;"
    id="isLogin">
  </section>
  <section style="display: flex;flex-direction: column;justify-content: center; align-items: center;">
    <h1 class="title"><a href="/">Steam For U</a></h1>
    <!--웹페이지 안에 스팀포유 띄움. 그리고 css 파일에 red함수를 가져와서 쓴다.-->

    <!-- <form method="get" action="search"> -->
    <p>
      <input type="text" placeholder=" 검색어를 입력하세요" class="back_color" id="inputBox" name="keyword" onkeyup="enterkey();"
        style="width: 500px;" />
      <input id="submit" class="back_color" type="submit" value="검색" onclick="check()" />
      <button type="button" class="btn btn-outline-light" style="margin-left:10px;" onclick="recommendUpdateCheck()">나를
        위한
        추천</button>
  </section>
  <section style="display: flex;flex-direction: column;justify-content: center; align-items: center;">
    <div style="width: 1010px" id="game-list">
    </div>

    <div id="bundle" style="width: 1010px; ">
    </div>

    <div id="carouselExampleFade" class="carousel slide carousel-fade" data-bs-ride="carousel"
      style="margin-bottom: 20px;"></div>
  </section>
  <!-- </form> -->

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3"
    crossorigin="anonymous"></script>
</body>

<script></script>

</html>